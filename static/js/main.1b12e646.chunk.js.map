{"version":3,"sources":["assets/block.svg","assets/beehive.svg","assets/flower.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","getModalStyle","top","left","transform","useStyles","makeStyles","root","flexGrow","display","flexFlow","alignItems","justifyContent","height","operations","generateEmptyGrid","rows","i","push","Array","from","App","useState","grid","setGrid","running","setRunning","React","open","setOpen","classes","runningRef","useRef","current","body","Paper","style","position","width","margin","id","stillLife","type","g","produce","gridCopy","runSimulation","useCallback","k","neighbors","forEach","x","y","newI","newK","setTimeout","textAlign","border","marginTop","Button","onClick","variant","color","Math","random","Card","marginLeft","gridTemplateColumns","map","col","key","newGrid","backgroundColor","undefined","Modal","onClose","aria-labelledby","aria-describedby","className","Box","marginBottom","marginRight","alt","src","decoding","srcset","data-file-width","data-file-height","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sKAAAA,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,oLCU3C,SAASC,IAIP,MAAO,CACLC,IAAI,GAAD,OAJO,GAIP,KACHC,KAAK,GAAD,OAJO,GAIP,KACJC,UAAU,cAAD,OANC,GAMD,eALE,GAKF,OAIb,IAAMC,EAAYC,YAAW,CAC3BC,KAAM,CACJC,SAAU,EACVC,QAAS,OACTC,SAAU,SACVC,WAAY,SACZC,eAAgB,eAChBC,OAAQ,iBAQNC,EAAa,CACjB,CAAC,EAAG,GACJ,CAAC,GAAI,GACL,CAAC,GAAI,GACL,EAAE,EAAG,GACL,CAAC,EAAG,GACJ,EAAE,GAAI,GACN,CAAC,EAAG,GACJ,EAAE,EAAG,IAGDC,EAAoB,WAExB,IADA,IAAMC,EAAO,GACJC,EAAI,EAAGA,EAhBF,GAgBeA,IAC3BD,EAAKE,KAAKC,MAAMC,KAAKD,MAhBT,KAgByB,kBAAM,MAG7C,OAAOH,GAwXMK,MArXf,WAAgB,IAAD,EACWC,oBAAS,WAC/B,OAAOP,OAFI,mBACNQ,EADM,KACAC,EADA,OAIiBF,oBAAS,GAJ1B,mBAING,EAJM,KAIGC,EAJH,OAKaC,IAAML,SAAS,GAL5B,gCAMQK,IAAML,SAASrB,IANvB,uBAOW0B,IAAML,UAAS,IAP1B,mBAONM,EAPM,KAOAC,EAPA,KAQPC,EAAUzB,IAIV0B,EAAaC,iBAAOP,GAC1BM,EAAWE,QAAUR,EAErB,IAOMS,EACJ,kBAACC,EAAA,EAAD,CAAOC,MAAO,CAAEC,SAAU,WAAYnC,IAAK,MAAOC,KAAM,MAAOC,UAAU,0BACvE,yBAAKgC,MAAO,CAAEE,MAAO,MAAOC,OAAQ,SAClC,wBAAIC,GAAG,sBAAP,8DAEF,yBAAKJ,MAAO,CAAEE,MAAO,MAAOC,OAAQ,SAClC,uBAAGC,GAAG,4BACJ,4FAGA,gGAGA,iIAUFC,EAAY,SAACC,GACL,SAARA,GACFlB,GAAQ,SAAAmB,GACN,OAAOC,YAAQD,GAAG,SAAAE,GAChBA,EAAS,IAAI,IAAM,EACnBA,EAAS,IAAI,IAAM,EACnBA,EAAS,IAAI,GAAK,EAClBA,EAAS,IAAI,GAAK,QAGZ,WAARH,GACFlB,GAAQ,SAAAmB,GACN,OAAOC,YAAQD,GAAG,SAAAE,GAChBA,EAAS,IAAI,IAAM,EACnBA,EAAS,IAAI,IAAM,EACnBA,EAAS,GAAG,IAAM,EAClBA,EAAS,GAAG,IAAM,EAClBA,EAAS,GAAG,GAAK,EACjBA,EAAS,GAAG,IAAM,QAGZ,UAARH,GACFlB,GAAQ,SAAAmB,GACN,OAAOC,YAAQD,GAAG,SAAAE,GAChBA,EAAS,IAAI,IAAM,EACnBA,EAAS,IAAI,GAAK,EAClBA,EAAS,GAAG,GAAK,EACjBA,EAAS,IAAI,GAAK,QAGZ,QAARH,GACFlB,GAAQ,SAAAmB,GACN,OAAOC,YAAQD,GAAG,SAAAE,GAChBA,EAAS,IAAI,IAAM,EACnBA,EAAS,IAAI,IAAM,EACnBA,EAAS,IAAI,IAAM,EACnBA,EAAS,GAAG,IAAM,EAClBA,EAAS,GAAG,IAAM,EAClBA,EAAS,GAAG,IAAM,QAIZ,WAARH,GACFlB,GAAQ,SAAAmB,GACN,OAAOC,YAAQD,GAAG,SAAAE,GAChBA,EAAS,IAAI,IAAM,EACnBA,EAAS,IAAI,IAAM,EACnBA,EAAS,IAAI,IAAM,QAIb,UAARH,GACFlB,GAAQ,SAAAmB,GACN,OAAOC,YAAQD,GAAG,SAAAE,GAChBA,EAAS,GAAG,GAAK,EACjBA,EAAS,GAAG,GAAK,EACjBA,EAAS,GAAG,GAAK,EACjBA,EAAS,GAAG,GAAK,EACjBA,EAAS,GAAG,GAAK,QAIX,WAARH,GACFlB,GAAQ,SAAAmB,GACN,OAAOC,YAAQD,GAAG,SAAAE,GAChBA,EAAS,GAAG,GAAK,EACjBA,EAAS,GAAG,GAAK,EACjBA,EAAS,GAAG,GAAK,EACjBA,EAAS,GAAG,GAAK,EACjBA,EAAS,GAAG,GAAK,EACjBA,EAAS,GAAG,GAAK,EACjBA,EAAS,GAAG,GAAK,EACjBA,EAAS,GAAG,GAAK,EACjBA,EAAS,GAAG,GAAK,QAIX,UAARH,GACFlB,GAAQ,SAAAmB,GACN,OAAOC,YAAQD,GAAG,SAAAE,GAChBA,EAAS,IAAI,IAAM,EACnBA,EAAS,IAAI,GAAK,EAClBA,EAAS,IAAI,IAAM,EAEnBA,EAAS,IAAI,GAAK,EAClBA,EAAS,IAAI,IAAM,EAEnBA,EAAS,IAAI,IAAM,EACnBA,EAAS,IAAI,GAAK,EAClBA,EAAS,IAAI,IAAM,EAEnBA,EAAS,IAAI,IAAM,EACnBA,EAAS,IAAI,GAAK,EAClBA,EAAS,IAAI,IAAM,EAEnBA,EAAS,IAAI,IAAM,EACnBA,EAAS,IAAI,GAAK,EAClBA,EAAS,IAAI,IAAM,EAEnBA,EAAS,IAAI,IAAM,EACnBA,EAAS,IAAI,GAAK,EAClBA,EAAS,IAAI,IAAM,EAEnBA,EAAS,IAAI,GAAK,EAClBA,EAAS,IAAI,IAAM,EAEnBA,EAAS,IAAI,IAAM,EACnBA,EAAS,IAAI,GAAK,EAClBA,EAAS,IAAI,IAAM,SAOrBC,EAAgBC,uBAAY,WAC3BhB,EAAWE,UAIhBT,GAAQ,SAAAmB,GACN,OAAOC,YAAQD,GAAG,SAAAE,GAChB,IAD6B,IAAD,WACnB5B,GACP,IAF0B,eAEjB+B,GACP,IAAIC,EAAY,EAChBnC,EAAWoC,SAAQ,YAAa,IAAD,mBAAVC,EAAU,KAAPC,EAAO,KACvBC,EAAOpC,EAAIkC,EACXG,EAAON,EAAII,EACbC,GAAQ,GAAKA,EApMf,IAoMiCC,GAAQ,GAAKA,EAnM9C,KAoMAL,GAAaN,EAAEU,GAAMC,OAIrBL,EAAY,GAAKA,EAAY,EAC/BJ,EAAS5B,GAAG+B,GAAK,EACI,IAAZL,EAAE1B,GAAG+B,IAA0B,IAAdC,IAC1BJ,EAAS5B,GAAG+B,GAAK,IAbZA,EAAI,EAAGA,EA9LV,GA8LuBA,IAAM,EAA1BA,IADF/B,EAAI,EAAGA,EA9LR,GA8LqBA,IAAM,EAA1BA,SAqBbsC,WAAWT,EAAe,QACzB,IAEH,OACE,yBAAKV,MAAO,CAAEE,MAAO,OAAQ7B,QAAS,SAEpC,6BACE,yBAAK2B,MAAO,CAAEoB,UAAW,SAAUC,OAAQ,iBAAkBlB,OAAQ,OAAQmB,UAAW,SACtF,sDAEF,yBAAKtB,MAAO,CAAEG,OAAQ,OAAQ9B,QAAS,OAAQ6B,MAAO,QAAS1B,eAAgB,eAAgBD,WAAY,WACzG,kBAACgD,EAAA,EAAD,CACEC,QAAS,WACPlC,GAAYD,GACPA,IACHM,EAAWE,SAAU,EACrBa,MAGJe,QAAQ,YACRC,MAAOrC,EAAU,YAAc,WAE9BA,EAAU,OAAS,SAEtB,kBAACkC,EAAA,EAAD,CACEC,QAAS,WAEP,IADA,IAAM5C,EAAO,GACJC,EAAI,EAAGA,EA9Od,GA8O2BA,IAC3BD,EAAKE,KACHC,MAAMC,KAAKD,MA/Ob,KA+O6B,kBAAO4C,KAAKC,SAAW,GAAM,EAAI,MAIhExC,EAAQR,IAEV6C,QAAQ,YACRC,MAAM,WAZR,UAgBA,kBAACH,EAAA,EAAD,CACEC,QAAS,WACPpC,EAAQT,MAEV8C,QAAQ,YACRC,MAAM,WALR,UAYF,kBAACG,EAAA,EAAD,CAAM7B,MAAO,CAAEE,MAAO,QAAS7B,QAAS,OAAQG,eAAgB,SAAUsD,WAAY,SACpF,yBACE9B,MAAO,CACL3B,QAAS,OACT0D,oBAAoB,UAAD,OA1QjB,GA0QiB,aAGpB5C,EAAK6C,KAAI,SAACpD,EAAMC,GAAP,OACRD,EAAKoD,KAAI,SAACC,EAAKrB,GAAN,OACP,yBACEsB,IAAG,UAAKrD,EAAL,YAAU+B,GACbY,QAAS,WACP,IAAMW,EAAU3B,YAAQrB,GAAM,SAAAsB,GAC5BA,EAAS5B,GAAG+B,GAAKzB,EAAKN,GAAG+B,GAAK,EAAI,KAEpCxB,EAAQ+C,IAEVnC,MAAO,CACLE,MAAO,GACPzB,OAAQ,GACR2D,gBAAiBjD,EAAKN,GAAG+B,GAAK,YAASyB,EACvChB,OAAQ,6BAOpB,yBAAKrB,MAAO,CAAEG,OAAQ,OAAQ9B,QAAS,OAAQG,eAAgB,eAAgBD,WAAY,WACzF,kBAACgD,EAAA,EAAD,CAAQG,MAAM,UAAUD,QAAQ,YAAYD,QA9PjC,WACjB/B,GAAQ,KA6PF,qBAGA,kBAAC6C,EAAA,EAAD,CACE9C,KAAMA,EACN+C,QA/PU,WAClB9C,GAAQ,IA+PA+C,kBAAgB,qBAChBC,mBAAiB,4BAEhB3C,KAMP,yBAAKE,MAAO,CAAE3B,QAAS,OAAQ6B,MAAO,MAAO1B,eAAgB,WAC3D,yBAAKwB,MAAO,CAAEE,MAAO,QAAS7B,QAAS,OAAQG,eAAgB,SAAUD,WAAY,SAAUuD,WAAY,OAAQR,UAAW,SAE5H,kBAACvB,EAAA,EAAD,CAAO2C,UAAWhD,EAAQvB,MACxB,kBAACwE,EAAA,EAAD,CAAK3C,MAAO,CAAEoB,UAAW,WACvB,wBAAIpB,MAAO,CAAE0B,MAAO,qBAApB,gBAEF,kBAACH,EAAA,EAAD,CAAQvB,MAAO,CAAEE,MAAO,QAAS0C,aAAc,QAAUpB,QAAS,kBAAMnB,EAAU,UAAUoB,QAAQ,WAAWC,MAAM,WAEnH,wBAAI1B,MAAO,CAAE6C,YAAa,SAA1B,SACA,yBAAKC,IAAI,qCAAqCC,IAAI,qIAAqIC,SAAS,QAAQ9C,MAAM,KAAKzB,OAAO,KAAKwE,OAAO,kRAAkRC,kBAAgB,KAAKC,mBAAiB,QAGhiB,kBAAC5B,EAAA,EAAD,CAAQvB,MAAO,CAAEE,MAAO,QAAS0C,aAAc,QAAUpB,QAAS,kBAAMnB,EAAU,YAAYoB,QAAQ,WAAWC,MAAM,WAErH,wBAAI1B,MAAO,CAAE6C,YAAa,SAA1B,WACA,yBAAKC,IAAI,2BAA2BC,IAAI,iHAAiHC,SAAS,QAAQ9C,MAAM,KAAKzB,OAAO,KAAKwE,OAAO,2OAA2OC,kBAAgB,KAAKC,mBAAiB,QAG3d,kBAAC5B,EAAA,EAAD,CAAQvB,MAAO,CAAEE,MAAO,QAAS0C,aAAc,QAAUpB,QAAS,kBAAMnB,EAAU,WAAWoB,QAAQ,WAAWC,MAAM,WAEpH,wBAAI1B,MAAO,CAAE6C,YAAa,SAA1B,UACA,yBAAKC,IAAI,0BAA0BC,IAAI,+GAA+GC,SAAS,QAAQ9C,MAAM,KAAKzB,OAAO,KAAKwE,OAAO,uOAAuOC,kBAAgB,KAAKC,mBAAiB,UAMxd,yBAAKnD,MAAO,CAAEC,SAAU,QAASC,MAAO,OAAQkB,UAAW,SAAU/C,QAAS,OAAQG,eAAgB,WACpG,wBAAIwB,MAAO,CAAEqB,OAAQ,iBAAkBe,gBAAiB,QAASlC,MAAO,QAAxE,uBAEF,yBAAKF,MAAO,CAAEE,MAAO,QAAS7B,QAAS,OAAQG,eAAgB,SAAUD,WAAY,SAAUuD,WAAY,OAAQR,UAAW,SAE5H,kBAACvB,EAAA,EAAD,CAAO2C,UAAWhD,EAAQvB,MACxB,kBAACwE,EAAA,EAAD,CAAK3C,MAAO,CAAEoB,UAAW,WACvB,wBAAIpB,MAAO,CAAE0B,MAAO,qBAApB,gBAEF,kBAACH,EAAA,EAAD,CAAQvB,MAAO,CAAEE,MAAO,QAAS0C,aAAc,QAAUpB,QAAS,kBAAMnB,EAAU,SAASoB,QAAQ,WAAWC,MAAM,WAElH,wBAAI1B,MAAO,CAAE6C,YAAa,SAA1B,QACA,yBAAKC,IAAI,wBAAwBC,IAAI,sEAAsEC,SAAS,QAAQ9C,MAAM,KAAKzB,OAAO,KAAKyE,kBAAgB,KAAKC,mBAAiB,QAG3L,kBAAC5B,EAAA,EAAD,CAAQvB,MAAO,CAAEE,MAAO,QAAS0C,aAAc,QAAUpB,QAAS,kBAAMnB,EAAU,YAAYoB,QAAQ,WAAWC,MAAM,WAErH,wBAAI1B,MAAO,CAAE6C,YAAa,SAA1B,WACA,yBAAKC,IAAI,0BAA0BC,IAAI,wEAAwEC,SAAS,QAAQ9C,MAAM,KAAKzB,OAAO,KAAKyE,kBAAgB,KAAKC,mBAAiB,QAG/L,kBAAC5B,EAAA,EAAD,CAAQvB,MAAO,CAAEE,MAAO,QAAS0C,aAAc,QAAUpB,QAAS,kBAAMnB,EAAU,YAAYoB,QAAQ,WAAWC,MAAM,WAErH,wBAAI1B,MAAO,CAAE6C,YAAa,SAA1B,WACA,yBAAKC,IAAI,2BAA2BC,IAAI,yEAAyEC,SAAS,QAAQ9C,MAAM,KAAKzB,OAAO,KAAKyE,kBAAgB,KAAKC,mBAAiB,UAMrM,yBAAKnD,MAAK,aAAIE,MAAO,QAAS7B,QAAS,OAAQG,eAAgB,SAAUD,WAAY,SAAUuD,WAAY,OAAQR,UAAW,QAApH,YAAuI,SAE/I,kBAACvB,EAAA,EAAD,CAAO2C,UAAWhD,EAAQvB,MACxB,kBAACwE,EAAA,EAAD,CAAK3C,MAAO,CAAEoB,UAAW,WACvB,wBAAIpB,MAAO,CAAE0B,MAAO,qBAApB,eAEF,kBAACH,EAAA,EAAD,CAAQvB,MAAO,CAAEE,MAAO,QAAS0C,aAAc,QAAUpB,QAAS,kBAAMnB,EAAU,WAAWoB,QAAQ,WAAWC,MAAM,WAEpH,wBAAI1B,MAAO,CAAE6C,YAAa,SAA1B,UACA,yBAAKC,IAAI,mCAAmCC,IAAI,iFAAiFC,SAAS,QAAQ9C,MAAM,KAAKzB,OAAO,KAAKyE,kBAAgB,KAAKC,mBAAiB,QAGjN,kBAAC5B,EAAA,EAAD,CAAQvB,MAAO,CAAEE,MAAO,QAAS0C,aAAc,QAAUpB,QAAS,kBAAMnB,EAAU,YAAYoB,QAAQ,WAAWC,MAAM,WAErH,wBAAI1B,MAAO,CAAE6C,YAAa,SAA1B,WACA,yBAAKC,IAAI,iCAAiCC,IAAI,+EAA+EC,SAAS,QAAQ9C,MAAM,MAAMzB,OAAO,KAAKyE,kBAAgB,MAAMC,mBAAiB,QAG/M,kBAAC5B,EAAA,EAAD,CAAQvB,MAAO,CAAEE,MAAO,QAAS0C,aAAc,QAAUpB,QAAS,kBAAMnB,EAAU,WAAWoB,QAAQ,WAAWC,MAAM,WAEpH,wBAAI1B,MAAO,CAAE6C,YAAa,SAA1B,UACA,yBAAKC,IAAI,eAAeC,IAAI,6DAA6DC,SAAS,QAAQ9C,MAAM,KAAKzB,OAAO,MAAMyE,kBAAgB,KAAKC,mBAAiB,cCvZlKC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.1b12e646.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/block.d1356152.svg\";","module.exports = __webpack_public_path__ + \"static/media/beehive.d420bb3e.svg\";","module.exports = __webpack_public_path__ + \"static/media/flower.c4bfc774.svg\";","import React, { useState, useRef, useCallback } from 'react';\nimport produce from \"immer\";\nimport './App.css';\nimport { Button, Card, Paper, Tabs, Tab, makeStyles, Box, Modal } from '@material-ui/core'\nimport Block from './assets/block.svg'\nimport Beehive from './assets/beehive.svg'\nimport Flower from './assets/flower.svg'\n\n\n\nfunction getModalStyle() {\n  const top = 50\n  const left = 50\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n    display: 'flex',\n    flexFlow: 'column',\n    alignItems: 'center',\n    justifyContent: 'space-evenly',\n    height: 'fit-content'\n  },\n\n});\n\nconst numRows = 25;\nconst numCols = 25;\n\nconst operations = [\n  [0, 1],\n  [0, -1],\n  [1, -1],\n  [-1, 1],\n  [1, 1],\n  [-1, -1],\n  [1, 0],\n  [-1, 0]\n];\n\nconst generateEmptyGrid = () => {\n  const rows = [];\n  for (let i = 0; i < numRows; i++) {\n    rows.push(Array.from(Array(numCols), () => 0));\n  }\n\n  return rows;\n};\n\nfunction App() {\n  const [grid, setGrid] = useState(() => {\n    return generateEmptyGrid();\n  });\n  const [running, setRunning] = useState(false);\n  const [value, setValue] = React.useState(0);\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n  const classes = useStyles();\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  const runningRef = useRef(running);\n  runningRef.current = running;\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const body = (\n    <Paper style={{ position: 'absolute', top: '50%', left: '50%', transform: `translate(-50%, -50%)`, }}>\n      <div style={{ width: '80%', margin: '20px' }}>\n        <h2 id=\"simple-modal-title\">This is a no player game (NPC). The rules are as follows:</h2>\n      </div>\n      <div style={{ width: '80%', margin: '20px' }}>\n        <p id=\"simple-modal-description\">\n          <ol>\n            1. Any live cell with two or three live neighbours survives.\n        </ol>\n          <ol>\n            2. Any dead cell with three live neighbours becomes a live cell.\n        </ol>\n          <ol>\n            3. All other live cells die in the next generation. Similarly, all other dead cells stay dead.\n        </ol>\n\n        </p>\n      </div>\n\n    </Paper >\n  );\n\n  const stillLife = (type) => {\n    if (type == 'block')\n      setGrid(g => {\n        return produce(g, gridCopy => {\n          gridCopy[10][10] = 1\n          gridCopy[11][10] = 1\n          gridCopy[10][9] = 1\n          gridCopy[11][9] = 1\n        });\n      });\n    if (type == 'beehive')\n      setGrid(g => {\n        return produce(g, gridCopy => {\n          gridCopy[10][10] = 1\n          gridCopy[10][11] = 1\n          gridCopy[8][10] = 1\n          gridCopy[8][11] = 1\n          gridCopy[9][9] = 1\n          gridCopy[9][12] = 1\n        });\n      });\n    if (type == 'flower')\n      setGrid(g => {\n        return produce(g, gridCopy => {\n          gridCopy[10][10] = 1\n          gridCopy[10][8] = 1\n          gridCopy[9][9] = 1\n          gridCopy[11][9] = 1\n        });\n      });\n    if (type == 'toad')\n      setGrid(g => {\n        return produce(g, gridCopy => {\n          gridCopy[10][10] = 1\n          gridCopy[10][11] = 1\n          gridCopy[10][12] = 1\n          gridCopy[9][11] = 1\n          gridCopy[9][12] = 1\n          gridCopy[9][13] = 1\n\n        });\n      });\n    if (type == 'blinker')\n      setGrid(g => {\n        return produce(g, gridCopy => {\n          gridCopy[10][10] = 1\n          gridCopy[10][11] = 1\n          gridCopy[10][12] = 1\n\n        });\n      });\n    if (type == 'glider')\n      setGrid(g => {\n        return produce(g, gridCopy => {\n          gridCopy[5][5] = 1\n          gridCopy[6][6] = 1\n          gridCopy[7][6] = 1\n          gridCopy[7][5] = 1\n          gridCopy[7][4] = 1\n\n        });\n      });\n    if (type == 'voyager')\n      setGrid(g => {\n        return produce(g, gridCopy => {\n          gridCopy[5][5] = 1\n          gridCopy[6][4] = 1\n          gridCopy[8][4] = 1\n          gridCopy[5][6] = 1\n          gridCopy[5][7] = 1\n          gridCopy[5][8] = 1\n          gridCopy[6][8] = 1\n          gridCopy[7][8] = 1\n          gridCopy[8][7] = 1\n\n        });\n      });\n    if (type == 'vimana')\n      setGrid(g => {\n        return produce(g, gridCopy => {\n          gridCopy[10][10] = 1\n          gridCopy[10][9] = 1\n          gridCopy[10][11] = 1\n\n          gridCopy[11][9] = 1\n          gridCopy[11][11] = 1\n\n          gridCopy[12][10] = 1\n          gridCopy[12][9] = 1\n          gridCopy[12][11] = 1\n\n          gridCopy[13][10] = 1\n          gridCopy[13][9] = 1\n          gridCopy[13][11] = 1\n\n          gridCopy[14][10] = 1\n          gridCopy[14][9] = 1\n          gridCopy[14][11] = 1\n\n          gridCopy[15][10] = 1\n          gridCopy[15][9] = 1\n          gridCopy[15][11] = 1\n\n          gridCopy[16][9] = 1\n          gridCopy[16][11] = 1\n\n          gridCopy[17][10] = 1\n          gridCopy[17][9] = 1\n          gridCopy[17][11] = 1\n\n\n        });\n      });\n  }\n\n  const runSimulation = useCallback(() => {\n    if (!runningRef.current) {\n      return;\n    }\n\n    setGrid(g => {\n      return produce(g, gridCopy => {\n        for (let i = 0; i < numRows; i++) {\n          for (let k = 0; k < numCols; k++) {\n            let neighbors = 0;\n            operations.forEach(([x, y]) => {\n              const newI = i + x;\n              const newK = k + y;\n              if (newI >= 0 && newI < numRows && newK >= 0 && newK < numCols) {\n                neighbors += g[newI][newK];\n              }\n            });\n\n            if (neighbors < 2 || neighbors > 3) {\n              gridCopy[i][k] = 0;\n            } else if (g[i][k] === 0 && neighbors === 3) {\n              gridCopy[i][k] = 1;\n            }\n          }\n        }\n      });\n    });\n\n    setTimeout(runSimulation, 100);\n  }, []);\n\n  return (\n    <div style={{ width: '100%', display: 'flex' }}>\n\n      <div>\n        <div style={{ textAlign: 'center', border: '2px solid grey', margin: '20px', marginTop: '10px' }}>\n          <h3>Conway's Game of Life</h3>\n        </div>\n        <div style={{ margin: '15px', display: 'flex', width: '300px', justifyContent: 'space-evenly', alignItems: 'center' }}>\n          <Button\n            onClick={() => {\n              setRunning(!running);\n              if (!running) {\n                runningRef.current = true;\n                runSimulation();\n              }\n            }}\n            variant=\"contained\"\n            color={running ? \"secondary\" : \"primary\"}\n          >\n            {running ? \"stop\" : \"start\"}\n          </Button>\n          <Button\n            onClick={() => {\n              const rows = [];\n              for (let i = 0; i < numRows; i++) {\n                rows.push(\n                  Array.from(Array(numCols), () => (Math.random() > 0.7 ? 1 : 0))\n                );\n              }\n\n              setGrid(rows);\n            }}\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            random\n      </Button>\n          <Button\n            onClick={() => {\n              setGrid(generateEmptyGrid());\n            }}\n            variant=\"contained\"\n            color=\"primary\"\n          >\n\n            clear\n      </Button>\n        </div>\n\n        <Card style={{ width: '300px', display: 'flex', justifyContent: 'center', marginLeft: '20px' }}>\n          <div\n            style={{\n              display: \"grid\",\n              gridTemplateColumns: `repeat(${numCols}, 12px)`\n            }}\n          >\n            {grid.map((rows, i) =>\n              rows.map((col, k) => (\n                <div\n                  key={`${i}-${k}`}\n                  onClick={() => {\n                    const newGrid = produce(grid, gridCopy => {\n                      gridCopy[i][k] = grid[i][k] ? 0 : 1;\n                    });\n                    setGrid(newGrid);\n                  }}\n                  style={{\n                    width: 10,\n                    height: 10,\n                    backgroundColor: grid[i][k] ? \"pink\" : undefined,\n                    border: \"solid 1px black\"\n                  }}\n                />\n              ))\n            )}\n          </div>\n        </Card>\n        <div style={{ margin: '15px', display: 'flex', justifyContent: 'space-evenly', alignItems: 'center' }} >\n          <Button color=\"default\" variant=\"contained\" onClick={handleOpen}>\n            Rules of the Game\n          </Button>\n          <Modal\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n          >\n            {body}\n          </Modal>\n        </div>\n\n      </div>\n\n      <div style={{ display: 'flex', width: '60%', justifyContent: 'center' }}>\n        <div style={{ width: '250px', display: 'flex', justifyContent: 'center', alignItems: 'center', marginLeft: '50px', marginTop: '20px' }}>\n\n          <Paper className={classes.root}>\n            <Box style={{ textAlign: 'center' }}>\n              <h3 style={{ color: 'rgba(10,10,10,1)' }}>Still Lifes</h3>\n            </Box>\n            <Button style={{ width: '200px', marginBottom: '10px' }} onClick={() => stillLife('block')} variant=\"outlined\" color=\"primary\">\n\n              <h4 style={{ marginRight: '20px' }}>Block</h4>\n              <img alt=\"Game of life block with border.svg\" src=\"//upload.wikimedia.org/wikipedia/commons/thumb/9/96/Game_of_life_block_with_border.svg/66px-Game_of_life_block_with_border.svg.png\" decoding=\"async\" width=\"66\" height=\"66\" srcset=\"//upload.wikimedia.org/wikipedia/commons/thumb/9/96/Game_of_life_block_with_border.svg/99px-Game_of_life_block_with_border.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/9/96/Game_of_life_block_with_border.svg/132px-Game_of_life_block_with_border.svg.png 2x\" data-file-width=\"66\" data-file-height=\"66\" />\n\n            </Button>\n            <Button style={{ width: '200px', marginBottom: '10px' }} onClick={() => stillLife('beehive')} variant=\"outlined\" color=\"primary\">\n\n              <h4 style={{ marginRight: '20px' }}>Beehive</h4>\n              <img alt=\"Game of life beehive.svg\" src=\"//upload.wikimedia.org/wikipedia/commons/thumb/6/67/Game_of_life_beehive.svg/98px-Game_of_life_beehive.svg.png\" decoding=\"async\" width=\"98\" height=\"82\" srcset=\"//upload.wikimedia.org/wikipedia/commons/thumb/6/67/Game_of_life_beehive.svg/147px-Game_of_life_beehive.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/6/67/Game_of_life_beehive.svg/196px-Game_of_life_beehive.svg.png 2x\" data-file-width=\"98\" data-file-height=\"82\" />\n\n            </Button>\n            <Button style={{ width: '200px', marginBottom: '10px' }} onClick={() => stillLife('flower')} variant=\"outlined\" color=\"primary\">\n\n              <h4 style={{ marginRight: '20px' }}>Flower</h4>\n              <img alt=\"Game of life flower.svg\" src=\"//upload.wikimedia.org/wikipedia/commons/thumb/3/31/Game_of_life_flower.svg/82px-Game_of_life_flower.svg.png\" decoding=\"async\" width=\"82\" height=\"82\" srcset=\"//upload.wikimedia.org/wikipedia/commons/thumb/3/31/Game_of_life_flower.svg/123px-Game_of_life_flower.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/3/31/Game_of_life_flower.svg/164px-Game_of_life_flower.svg.png 2x\" data-file-width=\"82\" data-file-height=\"82\" />\n\n            </Button>\n          </Paper>\n        </div>\n\n        <div style={{ position: 'fixed', width: '100%', textAlign: 'center', display: 'flex', justifyContent: 'center' }}>\n          <h2 style={{ border: '2px solid grey', backgroundColor: '#4444', width: '30%' }}>Select a player...</h2>\n        </div>\n        <div style={{ width: '250px', display: 'flex', justifyContent: 'center', alignItems: 'center', marginLeft: '50px', marginTop: '60px' }}>\n\n          <Paper className={classes.root}>\n            <Box style={{ textAlign: 'center' }}>\n              <h3 style={{ color: 'rgba(10,10,10,1)' }}>Oscillators</h3>\n            </Box>\n            <Button style={{ width: '200px', marginBottom: '10px' }} onClick={() => stillLife('toad')} variant=\"outlined\" color=\"primary\">\n\n              <h4 style={{ marginRight: '20px' }}>Toad</h4>\n              <img alt=\"Game of life toad.gif\" src=\"//upload.wikimedia.org/wikipedia/commons/1/12/Game_of_life_toad.gif\" decoding=\"async\" width=\"98\" height=\"98\" data-file-width=\"98\" data-file-height=\"98\" />\n\n            </Button>\n            <Button style={{ width: '200px', marginBottom: '10px' }} onClick={() => stillLife('beehive')} variant=\"outlined\" color=\"primary\">\n\n              <h4 style={{ marginRight: '20px' }}>Beehive</h4>\n              <img alt=\"Game of life beacon.gif\" src=\"//upload.wikimedia.org/wikipedia/commons/1/1c/Game_of_life_beacon.gif\" decoding=\"async\" width=\"98\" height=\"98\" data-file-width=\"98\" data-file-height=\"98\" />\n\n            </Button>\n            <Button style={{ width: '200px', marginBottom: '10px' }} onClick={() => stillLife('blinker')} variant=\"outlined\" color=\"primary\">\n\n              <h4 style={{ marginRight: '20px' }}>Blinker</h4>\n              <img alt=\"Game of life blinker.gif\" src=\"//upload.wikimedia.org/wikipedia/commons/9/95/Game_of_life_blinker.gif\" decoding=\"async\" width=\"82\" height=\"82\" data-file-width=\"82\" data-file-height=\"82\" />\n\n            </Button>\n          </Paper>\n        </div>\n\n        <div style={{ width: '250px', display: 'flex', justifyContent: 'center', alignItems: 'center', marginLeft: '50px', marginTop: '20px', marginTop: '70px' }}>\n\n          <Paper className={classes.root}>\n            <Box style={{ textAlign: 'center' }}>\n              <h3 style={{ color: 'rgba(10,10,10,1)' }}>Spaceships</h3>\n            </Box>\n            <Button style={{ width: '200px', marginBottom: '10px' }} onClick={() => stillLife('glider')} variant=\"outlined\" color=\"primary\">\n\n              <h4 style={{ marginRight: '20px' }}>Glider</h4>\n              <img alt=\"Game of life animated glider.gif\" src=\"//upload.wikimedia.org/wikipedia/commons/f/f2/Game_of_life_animated_glider.gif\" decoding=\"async\" width=\"84\" height=\"84\" data-file-width=\"84\" data-file-height=\"84\" />\n\n            </Button>\n            <Button style={{ width: '200px', marginBottom: '10px' }} onClick={() => stillLife('voyager')} variant=\"outlined\" color=\"primary\">\n\n              <h4 style={{ marginRight: '20px' }}>Voyager</h4>\n              <img alt=\"Game of life animated LWSS.gif\" src=\"//upload.wikimedia.org/wikipedia/commons/3/37/Game_of_life_animated_LWSS.gif\" decoding=\"async\" width=\"115\" height=\"84\" data-file-width=\"115\" data-file-height=\"84\" />\n\n            </Button>\n            <Button style={{ width: '200px', marginBottom: '10px' }} onClick={() => stillLife('vimana')} variant=\"outlined\" color=\"primary\">\n\n              <h4 style={{ marginRight: '20px' }}>Vimana</h4>\n              <img alt=\"I-Column.gif\" src=\"//upload.wikimedia.org/wikipedia/commons/f/fb/I-Column.gif\" decoding=\"async\" width=\"89\" height=\"145\" data-file-width=\"89\" data-file-height=\"145\" />\n\n            </Button>\n          </Paper>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}